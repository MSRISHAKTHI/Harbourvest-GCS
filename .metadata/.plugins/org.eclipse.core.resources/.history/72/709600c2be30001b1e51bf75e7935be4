package com.vuram.automation.Businessflows;

import org.openqa.selenium.JavascriptExecutor;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.vuram.automation.BusinessReusableComponents.InitiateRequest;
import com.vuram.automation.BusinessReusableComponents.SendBackfromAssignTaskOwnerTask;
import com.vuram.automation.Constants.Constants;
import com.vuram.automation.utility.VATT;

public class TC_001_InitiateRequest_Accounting_SendBackTheAssignTaskOwnerTask_AcknowledgeAndCloseTheReviewComments extends VATT{
	InitiateRequest request=new InitiateRequest ();
	SendBackfromAssignTaskOwnerTask obj=new SendBackfromAssignTaskOwnerTask();
	
	
	public static String RequestID;
	@Parameters({"RequestType","ClientName", "FundsName", "FunctionalTeam", "RecommendedPerson","EmailSubject","EmailBody"})
@Test
	public void TC001(String RequestType,String ClientName,String FundsName,String FunctionalTeam,String RecommendedPerson,String EmailSubject,String EmailBody) throws Exception
		
	{
		
	request.CreateRequest(RequestType, ClientName, FundsName, FunctionalTeam, RecommendedPerson, EmailSubject, EmailBody);
	
	 flow.OpenURL(Constants.Appurl);
     flow.LoginwithUserNameandPassword(Constants.ClientServiceUserUn, Constants.ClientServiceUserPw);
	 flow.OpenURL(Constants.ClientserviceURL);		
	flow.ExplicitWaitforSpecificText("Show Only Response Email Tasks");
	
	/* ************Records Verification********** */
	flow.ClickWebElement("CLIENT SERVICE REQUESTS");
	flow.ExplicitWaitforSpecificText("Show only recurring requests");
	((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
	flow.ClearDropDownField("Select Filter Set(s)");
	flow.ClearField("Search");
	flow.SetWebText(InitiateRequest.RequestID, "Search");
	flow.EnterKey("Search");
	flow.Timeout(2000);
	flow.ExplicitWaitforSpecificText(InitiateRequest.RequestID);
	flow.VerifyGridText(1, 1, 4, ClientName);
	flow.VerifyGridText(1, 1, 5, EmailSubject);
	flow.VerifyGridText(1, 1, 10, "Pending Functional Team Response");
	flow.ClickGridWebElementUsingText(1, InitiateRequest.RequestID);
	flow.SwitchtoRecentChildWindow();
	flow.ExplicitWaitforSpecificText("Summary");
	flow.VerifyUIFieldElements("Requestor Institution", Constants.ReqInstitution);
	flow.VerifyUIFieldElements("Client Name", ClientName);
	((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
		
	/*Fulfillment Details tab*/
	flow.ClickWebElement("Fulfillment Details");
	flow.ExplicitWaitforSpecificText("Final Response");
	flow.VerifyGridText(1, 1, 1, FunctionalTeam);
	flow.VerifyGridText(1, 1, 3, "FT Comments");
	flow.VerifyGridText(1, 1, 11, Constants.FTStatus1);
	
	/*Active tasks*/
	flow.ClickWebElement("Active Tasks");
	flow.ExplicitWaitforSpecificText("Other Active Tasks");
	flow.VerifyGridText(2, 1, 1, "Assign Task Owner - "+InitiateRequest.RequestID);
	
	/*Audit History*/
	flow.ClickWebElement("Audit History");
	flow.ExplicitWaitforSpecificText("Activity History");
	flow.VerifyGridText(1, 3, 1, "Initial Request Review");
	flow.VerifyGridText(1, 2, 1, "Prepare Response Email");
	flow.VerifyGridText(1, 1, 1, "Assign Task Owner");
	
	flow.Logout();
	
	obj.SBfromATO(RequestType, ClientName, FundsName, FunctionalTeam, RecommendedPerson, EmailSubject, EmailBody);	
	   
	    flow.OpenURL(Constants.Appurl);
		flow.LoginwithUserNameandPassword(Constants.ClientServiceUserUn, Constants.ClientServiceUserPw);
		flow.OpenURL(Constants.ClientserviceURL);		
		flow.ExplicitWaitforSpecificText("Show Only Response Email Tasks");
		flow.ClickWebElement("CLIENT SERVICE REQUESTS");		
		flow.ExplicitWaitforSpecificText("Show only recurring requests");
		((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
		flow.ClearDropDownField("Select Filter Set(s)");
		flow.ClearField("Search");
		flow.SetWebText(InitiateRequest.RequestID, "Search");
		flow.EnterKey("Search");
		flow.SortGridColumnBasedonColumnNumber(1, 2);
		flow.ExplicitWaitforSpecificText(InitiateRequest.RequestID);
		flow.VerifyGridText(1, 1, 10,"Pending Request Owner Response");		
		flow.ClickGridWebElementUsingText(1, InitiateRequest.RequestID);
		flow.SwitchtoRecentChildWindow();
		((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
		flow.ExplicitWaitforSpecificText("Summary");
		
		/*Fulfillment Details tab*/
		flow.ClickWebElement("Fulfillment Details");
		flow.ExplicitWaitforSpecificText("Final Response");
		flow.VerifyGridText(1, 1, 1, FunctionalTeam);
		flow.VerifyGridText(1, 1, 11, Constants.FTStatus2);
		
		/*Active tasks*/
		flow.ClickWebElement("Active Tasks");
		flow.ExplicitWaitforSpecificText("Other Active Tasks");
		flow.VerifyGridText(1, 1, 1, "Review Comments from Accounting Manager Team - "+InitiateRequest.RequestID);
		
		/*Audit History*/
		flow.ClickWebElement("Audit History");
		flow.ExplicitWaitforSpecificText("Activity History");
		flow.VerifyGridText(1, 1, 1, "Review Comments from Accounting Manager Team");
		    
		/*Review Comments from Accounting Manager Team Task*/
		flow.ClickWebElement("TASKS");			
		flow.ExplicitWaitforSpecificText("Show Only Response Email Tasks");
		((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
		flow.ClearDropDownField("Select Filter Set(s)");
		flow.ClearField("Search");
		flow.SetWebText(InitiateRequest.RequestID, "Search");
		flow.EnterKey("Search");
		flow.Timeout(2000);	
		flow.ClickGridWebElementUsingText(1,"Review Comments from Accounting Manager Team - "+InitiateRequest.RequestID);
		flow.PopulateTextFieldBasedonInstructionText("Character Count 0/4000", "Acknowledge and Close");
		flow.UploadFileBasedonIndex(Constants.ACfromReviewCommentsfromAccountingManagerTeamdoc, 1);
		flow.Timeout(2000);	
		flow.VerifyGridText(2, 1, 1, "doc2");
		flow.ClickButtonBasedonName(Constants.AcknowledgeAndClose);
		flow.VerifyTextPresentinUI(Constants.ACfromReviewCommentsfromAccountingManagerTeamConfirmationMsg);
		flow.ClickButtonBasedonName("YES");
        flow.ExplicitWaitforSpecificText("Show Only Response Email Tasks");
		
		/*Verification in Records*/
		flow.ClickWebElement("CLIENT SERVICE REQUESTS");
		flow.ExplicitWaitforSpecificText("Show only recurring requests");
		((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
		flow.ClearDropDownField("Select Filter Set(s)");
		flow.ClearField("Search");
		flow.SetWebText(InitiateRequest.RequestID, "Search");
		flow.EnterKey("Search");
		flow.Timeout(2000);
		flow.ExplicitWaitforSpecificText(InitiateRequest.RequestID);
		flow.VerifyGridText(1, 1, 10, "Closed");
		flow.ClickGridWebElementUsingText(1, InitiateRequest.RequestID);
		flow.SwitchtoRecentChildWindow();
		((JavascriptExecutor) owebdriver).executeScript("window.scrollTo(document.body.scrollHeight, 0)");
		flow.ExplicitWaitforSpecificText("Summary");
		
		/*Fulfillment Details tab*/
		flow.ClickWebElement("Fulfillment Details");
		flow.ExplicitWaitforSpecificText("Final Response");
		flow.VerifyGridText(1, 1, 1, FunctionalTeam);
		flow.VerifyGridText(1, 1, 11, Constants.FTStatus3);
		
		/*Documents*/
		flow.ClickWebElement("Documents");
		flow.ExplicitWaitforSpecificText("Category");
		flow.VerifyTextPresentinGrid(1, "doc3");
		
		/*Audit History*/
		flow.ClickWebElement("Audit History");
		flow.ExplicitWaitforSpecificText("Activity History");
		flow.VerifyGridText(1, 1, 1, "Close Request");
		
		flow.Logout();	

}
}